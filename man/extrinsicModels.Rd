% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/abcmodels.extrinsic.R
\name{extrinsicModels}
\alias{extrinsicModels}
\alias{nullExtrinsic}
\alias{nearestNeighborDisplacementExtrinsic}
\alias{everyoneDisplacementExtrinsic}
\alias{ExponentiallyDecayingPushExtrinsic}
\title{Extrinsic Character Evolution Models}
\usage{
nullExtrinsic(params, selfstates, otherstates, timefrompresent)

nearestNeighborDisplacementExtrinsic(params, selfstates, otherstates,
  timefrompresent)

everyoneDisplacementExtrinsic(params, selfstates, otherstates, timefrompresent)

ExponentiallyDecayingPushExtrinsic(params, selfstates, otherstates,
  timefrompresent)
}
\arguments{
\item{params}{describes input paramaters for the model (see Description)}

\item{selfstates}{vector of states for each taxon}

\item{otherstates}{matrix of character states, one row per taxon and once
column per state}

\item{timefrompresent}{which time slice in the tree}
}
\value{
A matrix of values representing character displacement from a single
time step in the tree.
}
\description{
Functions describing various models of 'extrinsive' evolution (i.e. evolutionary processes
dependent on factors extrinsic to the evolving lineage, such as environmental change, or
other evolving lineages that interact with the lineage in question (competitors, predators, etc).
}
\details{
The following extrinsic models are:

\code{nullExtrinsic} describes a model of no extrinsic character change.

It has no parameters, really.

\code{nearestNeighborDisplacementExtrinsic} describes a model of extrinsic trait evolution where character
values of a focal taxon depend on the values of closest relatives on the tree (e.g. competitive exclusion).

The input parameters for this model are:
\code{nearestNeighborDisplacementExtrinsic} params = sd, springK, maximum force

\code{everyoneDisplacementExtrinsic} describes a model of extrinsic trait evolution where the character
values of a focal taxon depend on the values of all co-extant relatives on the simulated tree.

The input parameters for this model are:
\code{everyoneDisplacementExtrinsic} params = sd, springK, maximum force

\code{ExponentiallyDecayingPushExtrinsic} describes a model of extrinsic trait evolution where the character
values of a focal taxon is 'pushed' away from other taxa with similar values, but the force of that 'push'
exponentially decays as lineages diverge and their character values become less similar.

The input parameters for this model are:
\code{ExponentiallyDecayingPushExtrinsic} params = sd, maximum force, half distance
}
\examples{
\donttest{
set.seed(1)
# Examples of simulations with various extrinsic models (and null intrinsic model)
tree <- rcoal(20)
# get realistic edge lengths
tree$edge.length <- tree$edge.length*20

#No trait evolution except due to
	# character displacement due to nearest neighbor taxon
char <- doSimulation(
	phy = tree, 
	intrinsicFn = nullIntrinsic, 
	extrinsicFn = nearestNeighborDisplacementExtrinsic, 
	startingValues = c(10), #root state
	intrinsicValues = c(0), 
	extrinsicValues = c(0.1, 0.1, 0.1), 
 generation.time = 100000)

#Similarly, no trait evolution except due to
	# character displacement from all other taxa in the clade
char <- doSimulation(
	phy = tree, 
	intrinsicFn = nullIntrinsic, 
	extrinsicFn = everyoneDisplacementExtrinsic, 
	startingValues = c(10), #root state
	intrinsicValues = c(0), 
	extrinsicValues = c(0.1, 0.1, 0.1), 
	generation.time = 100000)

# A variant where force of character displacement decays exponentially
		# as lineages become more different
char <- doSimulation(
	phy = tree, 
	intrinsicFn = nullIntrinsic, 
	extrinsicFn = ExponentiallyDecayingPushExtrinsic, 
	startingValues = c(10), #root state
	intrinsicValues = c(0), 
	extrinsicValues = c(0.1, 0.1, 2), 
	generation.time = 100000)
}
}
\author{
Brian O'Meara and Barb Banbury
}
